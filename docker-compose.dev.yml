version: '3.8'

services:
  database:
    image: postgres:14-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-strapi}
      POSTGRES_USER: ${DATABASE_USERNAME:-strapi}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-strapi}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - strapi-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: database
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME:-strapi}
      DATABASE_USERNAME: ${DATABASE_USERNAME:-strapi}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-strapi}
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET:-your-admin-jwt-secret}
      APP_KEYS: ${APP_KEYS:-key1,key2,key3,key4}
      NODE_ENV: development
    ports:
      - "1337:1337"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - uploads-data:/app/public/uploads
    depends_on:
      - database
    networks:
      - strapi-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_STRAPI_API_URL: http://localhost:1337
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - strapi-network

volumes:
  postgres-data:
  uploads-data:

networks:
  strapi-network:
    driver: bridge